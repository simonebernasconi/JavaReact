// Generated from antlr_grammars/Expression.g4 by ANTLR 4.1
package test.javareact.common.expressions.antlr_grammars;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ExpressionLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__17=1, T__16=2, T__15=3, T__14=4, T__13=5, T__12=6, T__11=7, T__10=8, 
		T__9=9, T__8=10, T__7=11, T__6=12, T__5=13, T__4=14, T__3=15, T__2=16, 
		T__1=17, T__0=18, MUL=19, DIV=20, ADD=21, SUB=22, DOT=23, MIN=24, MAX=25, 
		NOT=26, EQUAL=27, AND=28, OR=29, AVG=30, SUM=31, ASC=32, DESC=33, ALLTRUE=34, 
		ALLFALSE=35, ID=36, STRING=37, DIGIT=38, DOUBLE=39, BOOL=40, WS=41;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "':Bool'", "')'", "','", "'Constant('", "':ListString'", "'Size'", 
		"'['", "'('", "':Num'", "'get('", "':String'", "':ListInt'", "':ListDouble'", 
		"'Last'", "':ListBool'", "'contains'", "'size('", "'*'", "'/'", "'+'", 
		"'-'", "'.'", "'<'", "'>'", "'!'", "'=='", "'&'", "'|'", "'Avg'", "'Sum'", 
		"'orderAsc'", "'orderDesc'", "'isAllTrue'", "'isAllFalse'", "ID", "STRING", 
		"DIGIT", "DOUBLE", "BOOL", "WS"
	};
	public static final String[] ruleNames = {
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "MUL", "DIV", "ADD", "SUB", "DOT", "MIN", "MAX", "NOT", "EQUAL", 
		"AND", "OR", "AVG", "SUM", "ASC", "DESC", "ALLTRUE", "ALLFALSE", "ID", 
		"STRING", "DIGIT", "DOUBLE", "BOOL", "WS"
	};


	public ExpressionLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Expression.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 40: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2+\u013e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\3\2\3\2"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3"+
		"\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b"+
		"\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3"+
		"\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3"+
		"\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3"+
		"\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3"+
		"\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3"+
		"\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\""+
		"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3%\3%\7%\u010f\n%\f%\16%\u0112\13%\3&\3&\6&\u0116\n&\r&\16&\u0117"+
		"\3&\3&\3\'\6\'\u011d\n\'\r\'\16\'\u011e\3(\7(\u0122\n(\f(\16(\u0125\13"+
		"(\3(\3(\6(\u0129\n(\r(\16(\u012a\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u0136\n"+
		")\3*\6*\u0139\n*\r*\16*\u013a\3*\3*\2+\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1"+
		"\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37"+
		"\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1"+
		"\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1"+
		"Q*\1S+\2\3\2\7\3\2C\\\5\2\62;C\\c|\6\2\"\"\62;C\\c|\3\2\62;\4\2\13\f\""+
		"\"\u0144\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2"+
		"\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\3U\3\2\2\2\5W\3\2\2\2\7]\3\2\2\2\t_\3\2\2\2\13a\3\2\2\2\rk\3"+
		"\2\2\2\17w\3\2\2\2\21|\3\2\2\2\23~\3\2\2\2\25\u0080\3\2\2\2\27\u0085\3"+
		"\2\2\2\31\u008a\3\2\2\2\33\u0092\3\2\2\2\35\u009b\3\2\2\2\37\u00a7\3\2"+
		"\2\2!\u00ac\3\2\2\2#\u00b6\3\2\2\2%\u00bf\3\2\2\2\'\u00c5\3\2\2\2)\u00c7"+
		"\3\2\2\2+\u00c9\3\2\2\2-\u00cb\3\2\2\2/\u00cd\3\2\2\2\61\u00cf\3\2\2\2"+
		"\63\u00d1\3\2\2\2\65\u00d3\3\2\2\2\67\u00d5\3\2\2\29\u00d8\3\2\2\2;\u00da"+
		"\3\2\2\2=\u00dc\3\2\2\2?\u00e0\3\2\2\2A\u00e4\3\2\2\2C\u00ed\3\2\2\2E"+
		"\u00f7\3\2\2\2G\u0101\3\2\2\2I\u010c\3\2\2\2K\u0113\3\2\2\2M\u011c\3\2"+
		"\2\2O\u0123\3\2\2\2Q\u0135\3\2\2\2S\u0138\3\2\2\2UV\7_\2\2V\4\3\2\2\2"+
		"WX\7<\2\2XY\7D\2\2YZ\7q\2\2Z[\7q\2\2[\\\7n\2\2\\\6\3\2\2\2]^\7+\2\2^\b"+
		"\3\2\2\2_`\7.\2\2`\n\3\2\2\2ab\7E\2\2bc\7q\2\2cd\7p\2\2de\7u\2\2ef\7v"+
		"\2\2fg\7c\2\2gh\7p\2\2hi\7v\2\2ij\7*\2\2j\f\3\2\2\2kl\7<\2\2lm\7N\2\2"+
		"mn\7k\2\2no\7u\2\2op\7v\2\2pq\7U\2\2qr\7v\2\2rs\7t\2\2st\7k\2\2tu\7p\2"+
		"\2uv\7i\2\2v\16\3\2\2\2wx\7U\2\2xy\7k\2\2yz\7|\2\2z{\7g\2\2{\20\3\2\2"+
		"\2|}\7]\2\2}\22\3\2\2\2~\177\7*\2\2\177\24\3\2\2\2\u0080\u0081\7<\2\2"+
		"\u0081\u0082\7P\2\2\u0082\u0083\7w\2\2\u0083\u0084\7o\2\2\u0084\26\3\2"+
		"\2\2\u0085\u0086\7i\2\2\u0086\u0087\7g\2\2\u0087\u0088\7v\2\2\u0088\u0089"+
		"\7*\2\2\u0089\30\3\2\2\2\u008a\u008b\7<\2\2\u008b\u008c\7U\2\2\u008c\u008d"+
		"\7v\2\2\u008d\u008e\7t\2\2\u008e\u008f\7k\2\2\u008f\u0090\7p\2\2\u0090"+
		"\u0091\7i\2\2\u0091\32\3\2\2\2\u0092\u0093\7<\2\2\u0093\u0094\7N\2\2\u0094"+
		"\u0095\7k\2\2\u0095\u0096\7u\2\2\u0096\u0097\7v\2\2\u0097\u0098\7K\2\2"+
		"\u0098\u0099\7p\2\2\u0099\u009a\7v\2\2\u009a\34\3\2\2\2\u009b\u009c\7"+
		"<\2\2\u009c\u009d\7N\2\2\u009d\u009e\7k\2\2\u009e\u009f\7u\2\2\u009f\u00a0"+
		"\7v\2\2\u00a0\u00a1\7F\2\2\u00a1\u00a2\7q\2\2\u00a2\u00a3\7w\2\2\u00a3"+
		"\u00a4\7d\2\2\u00a4\u00a5\7n\2\2\u00a5\u00a6\7g\2\2\u00a6\36\3\2\2\2\u00a7"+
		"\u00a8\7N\2\2\u00a8\u00a9\7c\2\2\u00a9\u00aa\7u\2\2\u00aa\u00ab\7v\2\2"+
		"\u00ab \3\2\2\2\u00ac\u00ad\7<\2\2\u00ad\u00ae\7N\2\2\u00ae\u00af\7k\2"+
		"\2\u00af\u00b0\7u\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7D\2\2\u00b2\u00b3"+
		"\7q\2\2\u00b3\u00b4\7q\2\2\u00b4\u00b5\7n\2\2\u00b5\"\3\2\2\2\u00b6\u00b7"+
		"\7e\2\2\u00b7\u00b8\7q\2\2\u00b8\u00b9\7p\2\2\u00b9\u00ba\7v\2\2\u00ba"+
		"\u00bb\7c\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7u\2\2"+
		"\u00be$\3\2\2\2\u00bf\u00c0\7u\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2\7|\2"+
		"\2\u00c2\u00c3\7g\2\2\u00c3\u00c4\7*\2\2\u00c4&\3\2\2\2\u00c5\u00c6\7"+
		",\2\2\u00c6(\3\2\2\2\u00c7\u00c8\7\61\2\2\u00c8*\3\2\2\2\u00c9\u00ca\7"+
		"-\2\2\u00ca,\3\2\2\2\u00cb\u00cc\7/\2\2\u00cc.\3\2\2\2\u00cd\u00ce\7\60"+
		"\2\2\u00ce\60\3\2\2\2\u00cf\u00d0\7>\2\2\u00d0\62\3\2\2\2\u00d1\u00d2"+
		"\7@\2\2\u00d2\64\3\2\2\2\u00d3\u00d4\7#\2\2\u00d4\66\3\2\2\2\u00d5\u00d6"+
		"\7?\2\2\u00d6\u00d7\7?\2\2\u00d78\3\2\2\2\u00d8\u00d9\7(\2\2\u00d9:\3"+
		"\2\2\2\u00da\u00db\7~\2\2\u00db<\3\2\2\2\u00dc\u00dd\7C\2\2\u00dd\u00de"+
		"\7x\2\2\u00de\u00df\7i\2\2\u00df>\3\2\2\2\u00e0\u00e1\7U\2\2\u00e1\u00e2"+
		"\7w\2\2\u00e2\u00e3\7o\2\2\u00e3@\3\2\2\2\u00e4\u00e5\7q\2\2\u00e5\u00e6"+
		"\7t\2\2\u00e6\u00e7\7f\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7t\2\2\u00e9"+
		"\u00ea\7C\2\2\u00ea\u00eb\7u\2\2\u00eb\u00ec\7e\2\2\u00ecB\3\2\2\2\u00ed"+
		"\u00ee\7q\2\2\u00ee\u00ef\7t\2\2\u00ef\u00f0\7f\2\2\u00f0\u00f1\7g\2\2"+
		"\u00f1\u00f2\7t\2\2\u00f2\u00f3\7F\2\2\u00f3\u00f4\7g\2\2\u00f4\u00f5"+
		"\7u\2\2\u00f5\u00f6\7e\2\2\u00f6D\3\2\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9"+
		"\7u\2\2\u00f9\u00fa\7C\2\2\u00fa\u00fb\7n\2\2\u00fb\u00fc\7n\2\2\u00fc"+
		"\u00fd\7V\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff\7w\2\2\u00ff\u0100\7g\2\2"+
		"\u0100F\3\2\2\2\u0101\u0102\7k\2\2\u0102\u0103\7u\2\2\u0103\u0104\7C\2"+
		"\2\u0104\u0105\7n\2\2\u0105\u0106\7n\2\2\u0106\u0107\7H\2\2\u0107\u0108"+
		"\7c\2\2\u0108\u0109\7n\2\2\u0109\u010a\7u\2\2\u010a\u010b\7g\2\2\u010b"+
		"H\3\2\2\2\u010c\u0110\t\2\2\2\u010d\u010f\t\3\2\2\u010e\u010d\3\2\2\2"+
		"\u010f\u0112\3\2\2\2\u0110\u010e\3\2\2\2\u0110\u0111\3\2\2\2\u0111J\3"+
		"\2\2\2\u0112\u0110\3\2\2\2\u0113\u0115\7)\2\2\u0114\u0116\t\4\2\2\u0115"+
		"\u0114\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u0115\3\2\2\2\u0117\u0118\3\2"+
		"\2\2\u0118\u0119\3\2\2\2\u0119\u011a\7)\2\2\u011aL\3\2\2\2\u011b\u011d"+
		"\t\5\2\2\u011c\u011b\3\2\2\2\u011d\u011e\3\2\2\2\u011e\u011c\3\2\2\2\u011e"+
		"\u011f\3\2\2\2\u011fN\3\2\2\2\u0120\u0122\t\5\2\2\u0121\u0120\3\2\2\2"+
		"\u0122\u0125\3\2\2\2\u0123\u0121\3\2\2\2\u0123\u0124\3\2\2\2\u0124\u0126"+
		"\3\2\2\2\u0125\u0123\3\2\2\2\u0126\u0128\5/\30\2\u0127\u0129\t\5\2\2\u0128"+
		"\u0127\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u0128\3\2\2\2\u012a\u012b\3\2"+
		"\2\2\u012bP\3\2\2\2\u012c\u012d\7v\2\2\u012d\u012e\7t\2\2\u012e\u012f"+
		"\7w\2\2\u012f\u0136\7g\2\2\u0130\u0131\7h\2\2\u0131\u0132\7c\2\2\u0132"+
		"\u0133\7n\2\2\u0133\u0134\7u\2\2\u0134\u0136\7g\2\2\u0135\u012c\3\2\2"+
		"\2\u0135\u0130\3\2\2\2\u0136R\3\2\2\2\u0137\u0139\t\6\2\2\u0138\u0137"+
		"\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b"+
		"\u013c\3\2\2\2\u013c\u013d\b*\2\2\u013dT\3\2\2\2\n\2\u0110\u0117\u011e"+
		"\u0123\u012a\u0135\u013a";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}